// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enum for content request types
enum RequestType {
  TEXT
  VOICE
  FILE
}

model Page {
  id         Int      @id @default(autoincrement())
  name       String
  path       String   @unique
  isFavorite Boolean  @default(false)
  content    Json?
  createdAt  DateTime @default(now()) @map("createAt")
  updatedAt  DateTime @updatedAt @map("updateAt")

  @@map("page")
}

model Content {
  id        Int         @id @default(autoincrement())
  reqType   RequestType // Type of request (TEXT, VOICE, FILE)
  reqData   String      @db.Text // Actual request data or file path
  res       String      @db.Text
  doctors   Doctor[]    // Many-to-many relation
  createdAt DateTime    @default(now()) @map("createAt")
  updatedAt DateTime    @updatedAt @map("updateAt")

  @@map("content")
}

model Doctor {
  id          Int        @id @default(autoincrement())
  name        String
  phone       String
  address     String
  imageUrl    String
  category    DoctorCategory
  jobAddress  String
  information String     @db.Text
  isFavorite  Boolean    @default(false)
  view        Int        @default(0)
  reaction    Int        @default(0)
  contents    Content[]
  comments    Comment[]
  createdAt   DateTime   @default(now()) @map("createAt")
  updatedAt   DateTime   @updatedAt @map("updateAt")

  @@map("doctors")
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    String   // Clerk user ID
  userName  String
  comment   String   @db.Text
  doctor    Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId  Int
  createdAt DateTime @default(now()) @map("createAt")
  updatedAt DateTime @updatedAt @map("updateAt")

  @@map("comments")
}

enum DoctorCategory {
  DENTIST
  SURGEON
  THERAPIST
}
